<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	   xsi:schemaLocation="        http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd        http://camel.apache.org/schema/spring       http://camel.apache.org/schema/spring/camel-spring.xsd">
	<!-- Event Notifier -->
	<bean id="auditEventNotifier"
		  class="com.pactera.event.AuditEventNotifier">
	</bean>
	<bean id="xmlJsonDataFormat" class="org.apache.camel.dataformat.xmljson.XmlJsonDataFormat">
		<property name="encoding" value="UTF-8"/>
		<property name="elementName" value="${xml.elementName}"/>
		<property name="removeNamespacePrefixes" value="true"/>
		<property name="forceTopLevelObject" value="true"/>
		<property name="trimSpaces" value="true"/>
		<property name="skipNamespaces" value="true"/>
	</bean>
	<camelContext id="camel"
				  xmlns="http://camel.apache.org/schema/spring">
		<propertyPlaceholder id="properties" location="classpath:application.properties,classpath:config/bootstrap.properties" cache="false"/>
		<dataFormats>
			<json id="jack" library="Jackson" />
		</dataFormats>

		<rest apiDocs="true" consumes="application/json"
			  id="rest-315aadb3-0f6c-4696-964a-f8ba9dc3f8b5" path="/service"
			  produces="application/json">
			<post apiDocs="true" consumes="application/json,application/xml"
						 id="post-ead9902d-365a-493b-9870-cfb058490142"
						 produces="application/json" uri="/match">
			<param name="body" type="body" dataType="json"/>
			<param name="token" type="header" dataType="String" required="false"/>
			<responseMessage message="request SuccessFully!" code="200" responseModel="com.pactera.excep_json.JsonResult"/>
			<responseMessage message="request not found!" code="404" responseModel="com.pactera.excep_json.JsonResult"/>
			<responseMessage message="Server Error!" code="500" responseModel="com.pactera.excep_json.JsonResult"/>
			<to uri="direct:inbox" />
		</post>
		</rest>
		<route id="_injectroute" streamCache="true">
			<from id="_fromIR1" uri="direct:inbox?timeout={{camel.request.timeout}}" />
			<process ref="camelRequestProccess"/>
			<onException id="_onException1">
				<exception>java.lang.Exception</exception>
				<redeliveryPolicy maximumRedeliveries="3" />
				<handled>
					<constant>true</constant>
				</handled>
				<process ref="globalExceptionProccess"/>
				<setExchangePattern id="_setExchangePattern1"
									pattern="InOnly" />
				<to id="_toerror" uri="seda:error" />
			</onException>
			<choice>
				<when>
					<!-- check Token-->
					<simple>${in.header.tokenStatus} == 0 </simple>
					<setHeader headerName="accept">
						<simple>application/json</simple>
					</setHeader>
					<!--really request uri setting -->
					<choice>
						<when>
							<simple>${in.header.queryStr} != null </simple>
							<to uri="{{camel.request.url}}?bridgeEndpoint=true{{camel.request.query}}{in.header.queryStr}"/>
						</when>
						<otherwise>
							<to uri="{{camel.request.url}}?bridgeEndpoint=true"/>
						</otherwise>
					</choice>
					<to id="route-audit1" uri="direct:audit" />
					<process ref="camelResponseProccess"/>
					<log message=">> ftping $simple{in.header.accept}"/>
				</when>
				<otherwise>
					<to uri="bean:tokenValidProcess?method=process"/>
					<to id="_toerror" uri="seda:error"  pattern="InOnly"/>
				</otherwise>
			</choice>
			<!-- so jms  Exception that not send Message to MQ(because MQ has Exception!!!)-->
			<onException>
				<exception>javax.jms.JMSException</exception>
				<redeliveryPolicy maximumRedeliveries="2" />
				<handled>
					<constant>true</constant>
				</handled>
				<process ref="globalExceptionProccess"/>
			</onException>
			<onException id="_onException1">
				<exception>java.lang.Exception</exception>
				<redeliveryPolicy maximumRedeliveries="3" />
				<handled>
					<constant>true</constant>
				</handled>
				<process ref="globalExceptionProccess"/>
				<setExchangePattern id="_setExchangePattern1"
									pattern="InOnly" />
				<to id="_toerror" uri="seda:error"  pattern="InOnly"/>
			</onException>
			<log id="route-log" message=">>> Message:  ${body}" />
			<setExchangePattern id="_setExchangePattern3"
								pattern="InOnly" />
			<to id="_to1" uri="seda:loginfo" pattern="InOnly"/>
		</route>
		<route id="_auditroute" streamCache="true">
			<from id="_fromauditUR" uri="direct:audit" />
			<!-- <unmarshal><custom ref="jack"/></unmarshal> -->
			<to id="_to4" uri="bean:com.pactera.proccess.MyProcessor?method=process" />
			<log id="_logex" message=">> Auditting : ${body}" />
		</route>
		<!--log data convert Route-->
		<route id="_logDataFormatRoute" streamCache="true">
			<from id="_fromLogDataFormatUR" uri="direct:logDataFormat" />
			<to id="_to5"  uri="bean:logDataformat?method=process" />
		</route>
		<!--send log Info message to MQ Queue Route-->
		<route id="_logroute" streamCache="true">
			<from id="_fromIR1" uri="seda:loginfo?synchronous=true" />
			<setExchangePattern pattern="InOnly"/>
			<!--so send message need to String Type that to direct:audit data type convert!-->
			<to uri="direct:logDataFormat"/>
			<convertBodyTo type="String"/>
			<to id="_tologq" uri="amqp:queue:amqp:queue:q.hzinte.logq?asyncConsumer=true"  pattern="InOnly" />
			<onException>
				<exception>java.lang.Exception</exception>
				<redeliveryPolicy maximumRedeliveries="2" />
				<handled>
					<constant>true</constant>
				</handled>
				<process ref="globalExceptionProccess"/>
			</onException>
		</route>
		<!--send log Error message to MQ Queue Route-->
		<route id="_errorroute" streamCache="true">
			<from id="_fromIR1" uri="seda:error?synchronous=true" />
			<setExchangePattern pattern="InOnly"/>
			<!--so send message need to String Type that to direct:audit data type convert!-->
			<to uri="direct:logDataFormat"/>
			<to id="_toerrorq" uri="amqp:queue:q.hzinte.errorq" pattern="InOnly" />
			<onException>
				<exception>java.lang.Exception</exception>
				<redeliveryPolicy maximumRedeliveries="2" />
				<handled>
					<constant>true</constant>
				</handled>
				<process ref="globalExceptionProccess"/>
			</onException>
		</route>
	</camelContext>
</beans>
